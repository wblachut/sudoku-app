{"version":3,"sources":["components/Sudoku/BoxWrapper/BoxWrapper.tsx","components/Sudoku/SudokuCell/index.ts","components/Sudoku/SudokuCell/SudokuEmptyCell/CellInputElement.tsx","components/Sudoku/SudokuCell/Picker/Picker.tsx","components/Sudoku/SudokuCell/SudokuEmptyCell/SudokuEmptyCell.tsx","components/Sudoku/SudokuCell/SudokuCell.tsx","components/Sudoku/SudokuRow.tsx","utils/sudokuFunctions.ts","components/SudokuOptions/index.ts","components/SudokuOptions/SudokuOptions.tsx","components/Sudoku/Sudoku.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Box","className","BoxWrapper","board","map","uuid","assignValueToCell","value","cords","setBoard","x","y","updatedBoard","Object","assign","CellInput","col","row","inputRef","popupState","Fragment","type","maxLength","data-cord","ref","bindToggle","onInput","e","currentTarget","getAttribute","isNaN","onCellInput","Picker","Popper","bindPopper","transition","disablePortal","TransitionProps","Grow","timeout","array","index","element","PickerTile","role","onClick","current","parentNode","val","innerHTML","onPickerClick","SudokuEmptyCell","useState","isOpen","setIsOpen","useRef","handleClickAway","handleClick","open","variant","popupId","ClickAwayListener","onClickAway","SudokuCell","SudokuRow","getFormattedBoard","raw","formatBoard","getFormattedSolution","rawSolution","solutionBoard","unformatted","i","j","push","getSudoku","makepuzzle","solvepuzzle","solution","handleNewGame","setSudoku","setCandidate","setValidating","getSudokuFunc","newSudoku","handleValidateSudoku","candidate","isValidating","validateSudokuBoard","handleValidateFullBoard","every","arr","el","alert","alertSudokuValidation","inputs","document","getElementsByTagName","length","console","log","printErrors","forEach","useStyles","makeStyles","theme","createStyles","root","margin","spacing","SudokuOptions","classes","useEffect","Button","color","input","prompt","JSON","parse","onFetchBoardClick","Sudoku","sudokuGame","sudoku","setSolution","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.93cdb536.chunk.js","sourcesContent":["import React from 'react';\r\nimport './BoxWrapper.scss';\r\nimport { uuid } from 'uuidv4';\r\nimport { BoxWrapProps } from '../types';\r\n\r\nexport const BoxWrapper = ({ board }: BoxWrapProps): JSX.Element => (\r\n\t<div className=\"sudoku-box-wrapper\">\r\n\t\t{board &&\r\n\t\t\tboard.map(() => {\r\n\t\t\t\treturn <Box key={uuid()} />;\r\n\t\t\t})}\r\n\t</div>\r\n);\r\n\r\nconst Box = (): JSX.Element => {\r\n\treturn <div className=\"sudoku-box\"></div>;\r\n};\r\n\r\nexport default BoxWrapper;\r\n","import { Board } from '../types';\r\n\r\nexport const onCellInput = (\r\n\te: React.SyntheticEvent<HTMLInputElement>,\r\n\tboard: Board,\r\n\tsetBoard: React.Dispatch<React.SetStateAction<Board>>\r\n): void => {\r\n\tconst cords = e.currentTarget.getAttribute('data-cord');\r\n\tif (isNaN(+e.currentTarget.value)) {\r\n\t\te.currentTarget.value = '';\r\n\t\treturn;\r\n\t}\r\n\tif (board && cords) {\r\n\t\tassignValueToCell(+e.currentTarget.value, board, cords, setBoard);\r\n\t}\r\n};\r\n\r\nexport const onPickerClick = (\r\n\te: React.MouseEvent<HTMLDivElement>,\r\n\tboard: Board,\r\n\tinputRef: React.MutableRefObject<any>,\r\n\tsetBoard: React.Dispatch<React.SetStateAction<Board>>\r\n): void => {\r\n\tconst cords = inputRef.current.parentNode.parentNode.getAttribute(\r\n\t\t'data-cord'\r\n\t);\r\n\tconst val = e.currentTarget.innerHTML;\r\n\tinputRef.current.value = val;\r\n\tassignValueToCell(+val, board, cords, setBoard);\r\n};\r\n\r\nconst assignValueToCell = (\r\n\tvalue: number,\r\n\tboard: Board,\r\n\tcords: string,\r\n\tsetBoard: React.Dispatch<React.SetStateAction<Board>>\r\n): void => {\r\n\tconst x = cords[2];\r\n\tconst y = cords[0];\r\n\tconst updatedBoard = Object.assign(board);\r\n\tupdatedBoard[y][x] = value;\r\n\tsetBoard(updatedBoard);\r\n};\r\n","import React from 'react';\r\nimport './CellInputElement.scss';\r\nimport { bindToggle } from 'material-ui-popup-state';\r\nimport { CellInpElementProps } from '../../types';\r\nimport { onCellInput } from '../index';\r\n\r\nexport const CellInput = ({\r\n\tcol,\r\n\trow,\r\n\tboard,\r\n\tinputRef,\r\n\tpopupState,\r\n\tsetBoard,\r\n}: CellInpElementProps): JSX.Element => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"tel\"\r\n\t\t\t\tmaxLength={1}\r\n\t\t\t\tdata-cord={[row, col]}\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\t{...bindToggle(popupState)}\r\n\t\t\t\tonInput={(e) => onCellInput(e, board, setBoard)}\r\n\t\t\t></input>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default CellInput;\r\n","import React from 'react';\r\nimport './Picker.scss';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { bindPopper } from 'material-ui-popup-state';\r\nimport { PickerProps, PickerTileProps } from '../../types';\r\nimport { onPickerClick } from '../index';\r\nimport { uuid } from 'uuidv4';\r\n\r\nexport const Picker = ({\r\n\tinputRef,\r\n\tboard,\r\n\tpopupState,\r\n\tsetBoard,\r\n}: PickerProps): JSX.Element => {\r\n\treturn (\r\n\t\t<Popper {...bindPopper(popupState)} transition disablePortal={true}>\r\n\t\t\t{({ TransitionProps }) => (\r\n\t\t\t\t<Grow {...TransitionProps} timeout={500}>\r\n\t\t\t\t\t<div className=\"sudoku-picker\">\r\n\t\t\t\t\t\t{board.map((array, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<PickerTile\r\n\t\t\t\t\t\t\t\t\telement={index}\r\n\t\t\t\t\t\t\t\t\tkey={uuid()}\r\n\t\t\t\t\t\t\t\t\tinputRef={inputRef}\r\n\t\t\t\t\t\t\t\t\tboard={board}\r\n\t\t\t\t\t\t\t\t\tsetBoard={setBoard}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grow>\r\n\t\t\t)}\r\n\t\t</Popper>\r\n\t);\r\n};\r\n\r\nexport default Picker;\r\n\r\nconst PickerTile = ({\r\n\telement,\r\n\tinputRef,\r\n\tboard,\r\n\tsetBoard,\r\n}: PickerTileProps): JSX.Element => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\trole=\"button\"\r\n\t\t\tclassName=\"sudoku-picker-box\"\r\n\t\t\tonClick={(e) => onPickerClick(e, board, inputRef, setBoard)}\r\n\t\t>\r\n\t\t\t{element + 1}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport PopupState from 'material-ui-popup-state';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport { SudoEmptyCellProps } from '../../types';\r\nimport CellInputElement from './CellInputElement';\r\nimport Picker from '../Picker/Picker';\r\n\r\nexport const SudokuEmptyCell = ({\r\n\tcol,\r\n\trow,\r\n\tboard,\r\n\tsetBoard,\r\n}: SudoEmptyCellProps): JSX.Element => {\r\n\tconst [isOpen, setIsOpen] = useState<boolean>(false);\r\n\tconst inputRef = useRef<HTMLInputElement | null>(null);\r\n\tconst handleClickAway = (): void => setIsOpen(false);\r\n\tconst handleClick = (): void => setIsOpen((open) => !open);\r\n\r\n\treturn (\r\n\t\t<PopupState variant=\"popper\" popupId=\"sudoku-popper\">\r\n\t\t\t{(popupState) => (\r\n\t\t\t\t<ClickAwayListener onClickAway={handleClickAway}>\r\n\t\t\t\t\t<div className=\"sudoku-cell__input-div\" onClick={handleClick}>\r\n\t\t\t\t\t\t<CellInputElement\r\n\t\t\t\t\t\t\tcol={col}\r\n\t\t\t\t\t\t\trow={row}\r\n\t\t\t\t\t\t\tboard={board}\r\n\t\t\t\t\t\t\tinputRef={inputRef}\r\n\t\t\t\t\t\t\tpopupState={popupState}\r\n\t\t\t\t\t\t\tsetBoard={setBoard}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{isOpen && (\r\n\t\t\t\t\t\t\t<Picker\r\n\t\t\t\t\t\t\t\tboard={board}\r\n\t\t\t\t\t\t\t\tinputRef={inputRef}\r\n\t\t\t\t\t\t\t\tpopupState={popupState}\r\n\t\t\t\t\t\t\t\tsetBoard={setBoard}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ClickAwayListener>\r\n\t\t\t)}\r\n\t\t</PopupState>\r\n\t);\r\n};\r\n\r\nexport default SudokuEmptyCell;\r\n","import React from 'react';\r\nimport './SudokuCell.scss';\r\nimport { SudoCellProps } from '../types';\r\nimport SudokuEmptyCell from './SudokuEmptyCell/SudokuEmptyCell';\r\nimport { uuid } from 'uuidv4';\r\n\r\nconst emptyCellValue = 0;\r\nconst errorCellElement = 10;\r\n\r\nexport const SudokuCell = ({\r\n\tcol,\r\n\trow,\r\n\telement,\r\n\tboard,\r\n\tsetBoard,\r\n}: SudoCellProps): JSX.Element => {\r\n\treturn (\r\n\t\t<div className=\"sudoku-cell\" data-cord={[row, col]} key={uuid()}>\r\n\t\t\t{element !== emptyCellValue && element !== errorCellElement && element}\r\n\t\t\t{element === errorCellElement && (\r\n\t\t\t\t<span className=\"sudoku-invalid-element\">x</span>\r\n\t\t\t)}\r\n\t\t\t{element === emptyCellValue && (\r\n\t\t\t\t<SudokuEmptyCell\r\n\t\t\t\t\tcol={col}\r\n\t\t\t\t\trow={row}\r\n\t\t\t\t\tboard={board}\r\n\t\t\t\t\tsetBoard={setBoard}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SudokuCell;\r\n","import React from 'react';\r\nimport { SudoRowProps } from './types';\r\nimport SudokuCell from './SudokuCell/SudokuCell';\r\nimport { uuid } from 'uuidv4';\r\n\r\nexport const SudokuRow = ({\r\n\tarray,\r\n\trow,\r\n\tboard,\r\n\tsetBoard,\r\n}: SudoRowProps): JSX.Element => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{array.map((element, col: number) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<SudokuCell\r\n\t\t\t\t\t\tkey={uuid()}\r\n\t\t\t\t\t\tcol={col}\r\n\t\t\t\t\t\trow={row}\r\n\t\t\t\t\t\telement={element}\r\n\t\t\t\t\t\tboard={board}\r\n\t\t\t\t\t\tsetBoard={setBoard}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default SudokuRow;\r\n","import { makepuzzle, solvepuzzle } from 'sudoku';\r\n\r\nconst getFormattedBoard = (raw: any) => {\r\n\tconst board = raw.map((e: number | null) => (e === null ? 0 : e + 1));\r\n\treturn formatBoard(board);\r\n};\r\n\r\nconst getFormattedSolution = (rawSolution: any) => {\r\n\tconst solutionBoard = rawSolution.map((e: number) => e + 1);\r\n\treturn formatBoard(solutionBoard);\r\n};\r\n\r\nconst formatBoard = (unformatted: any) => {\r\n\tconst board: number[][] = [];\r\n\tfor (let i = 0; i < 9; i++) {\r\n\t\tconst row: number[] = [];\r\n\t\tfor (let j = 0; j < 9; j++) {\r\n\t\t\tconst value = unformatted[i * 9 + j];\r\n\t\t\tconst col: number = value;\r\n\t\t\trow.push(col);\r\n\t\t}\r\n\t\tboard.push(row);\r\n\t}\r\n\treturn board;\r\n};\r\n\r\nexport const getSudoku = () => {\r\n\tconst raw = makepuzzle();\r\n\tconst rawSolution = solvepuzzle(raw);\r\n\r\n\tconst result = {\r\n\t\tboard: getFormattedBoard(raw),\r\n\t\tsolution: getFormattedSolution(rawSolution),\r\n\t};\r\n\treturn result;\r\n};\r\n\r\nexport const alertSudokuValidation = (candidate: any, solution: any): void => {\r\n\tif (\r\n\t\tcandidate.every((value: number, index: number) => value === solution[index])\r\n\t) {\r\n\t\talert('Congratulations, sudoku solved correctly !');\r\n\t} else {\r\n\t\talert('Sorry, sudoku solved wrong !');\r\n\t}\r\n};\r\n","import { getSudoku, alertSudokuValidation } from '../../utils/sudokuFunctions';\r\nimport { Board, Sudoku } from './types';\r\n\r\ntype UserBoard = Board | JSON;\r\n\r\nexport const handleNewGame = (\r\n\tsetSudoku: any,\r\n\tsetCandidate: any,\r\n\tsetValidating: any,\r\n\tgetSudokuFunc: any = getSudoku()\r\n\t// setSudoku?: React.Dispatch<React.SetStateAction<Sudoku>>\r\n): void => {\r\n\tconst newSudoku = getSudokuFunc;\r\n\tsetSudoku(newSudoku);\r\n\tsetCandidate(newSudoku.board);\r\n\tsetValidating(false);\r\n};\r\n\r\nexport const handleValidateSudoku = (\r\n\tboard: Board,\r\n\tsolution: Board,\r\n\tcandidate: Board,\r\n\tisValidating: boolean,\r\n\tsetBoard: React.Dispatch<React.SetStateAction<Board>>,\r\n\tsetCandidate: React.Dispatch<React.SetStateAction<Board>>,\r\n\tsetValidating: React.Dispatch<React.SetStateAction<boolean>>\r\n): void => {\r\n\tif (!isValidating) {\r\n\t\tsetCandidate(Object.assign(board));\r\n\t\tsetBoard(validateSudokuBoard(candidate, true, solution));\r\n\t} else {\r\n\t\tsetCandidate(Object.assign(board));\r\n\t\tsetBoard(validateSudokuBoard(candidate, false));\r\n\t}\r\n\tsetValidating((isValidating) => !isValidating);\r\n};\r\n\r\nexport const handleValidateFullBoard = (\r\n\tboard: Board,\r\n\tcandidate: Board,\r\n\tsolution: Board,\r\n\tisValidating: boolean,\r\n\tsetBoard: React.Dispatch<React.SetStateAction<Board>>,\r\n\tsetValidating: React.Dispatch<React.SetStateAction<boolean>>,\r\n\tsetCandidate: React.Dispatch<React.SetStateAction<Board>>\r\n): void => {\r\n\tif (board.every((arr) => arr.every((el) => el !== 0))) {\r\n\t\tsetBoard(validateSudokuBoard(board, true, solution));\r\n\t\thandleValidateSudoku(\r\n\t\t\tboard,\r\n\t\t\tsolution,\r\n\t\t\tcandidate,\r\n\t\t\tisValidating,\r\n\t\t\tsetBoard,\r\n\t\t\tsetCandidate,\r\n\t\t\tsetValidating\r\n\t\t);\r\n\t\talertSudokuValidation(board, solution);\r\n\t}\r\n\tconst inputs = document.getElementsByTagName('input').length;\r\n\tconsole.log(inputs);\r\n};\r\n\r\nconst validateSudokuBoard = (\r\n\tboard: Board,\r\n\tprintErrors: boolean,\r\n\tsolution?: Board\r\n): Board => {\r\n\tboard.forEach((array: number[], y: number) => {\r\n\t\tarray.forEach((element: number, x: number) => {\r\n\t\t\tif (printErrors && solution) {\r\n\t\t\t\tif (element !== solution[y][x] && element !== 0) {\r\n\t\t\t\t\tboard[y][x] = 10;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\telement === 10 ? (board[y][x] = 0) : (board[y][x] = element);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn board;\r\n};\r\n\r\nexport const handleFetchBoard = (\r\n\tuserBoard: UserBoard,\r\n\tsetSudoku: any,\r\n\tsetCandidate: any,\r\n\tsetValidating: any\r\n\t// setSudoku?: React.Dispatch<React.SetStateAction<Sudoku>>\r\n): void => {\r\n\t// try parse\r\n\tif (typeof userBoard === 'string') JSON.parse(userBoard);\r\n\t// if (object is not type of number[][]) return;\r\n\t// if validate user sudoku is true =>\r\n\thandleNewGame(\r\n\t\tsetSudoku,\r\n\t\tsetCandidate,\r\n\t\tsetValidating,\r\n\t\tgetUserSudoku(userBoard)\r\n\t);\r\n\t// if validate user sudoku is false => alert('provided board is incorrect)\r\n\tconsole.log('handle fetch board');\r\n};\r\n\r\nexport const getUserSudoku = (board: any): Sudoku => {\r\n\treturn {\r\n\t\tboard: board,\r\n\t\tsolution: board,\r\n\t\t// solution: getUserBoardSolution(board),\r\n\t};\r\n};\r\n\r\nconst getUserBoardSolution = (board: Board): Board => {\r\n\t// do something\r\n\treturn board;\r\n};\r\n\r\nconst validateUserSudoku = (board: Board): Board | boolean => {\r\n\tif (getUserBoardSolution(board)) return true;\r\n\treturn false;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport './SudokuOptions.scss';\r\nimport {\r\n\thandleNewGame,\r\n\thandleValidateSudoku,\r\n\thandleValidateFullBoard,\r\n\thandleFetchBoard,\r\n} from './index';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { SudoOptionsProps } from './types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\troot: {\r\n\t\t\t'& > *': {\r\n\t\t\t\tmargin: theme.spacing(2),\r\n\t\t\t\t// position: 'static',\r\n\t\t\t},\r\n\t\t},\r\n\t})\r\n);\r\n\r\nconst onFetchBoardClick = () => {\r\n\tconst input = prompt('paste board JSON here');\r\n\tif (input === '' || input === null) return;\r\n\ttry {\r\n\t\tconst userSudoku = JSON.parse(input);\r\n\t\tconsole.log(input);\r\n\t} catch (e) {\r\n\t\talert('invalid sudoku input');\r\n\t\tconsole.log(e);\r\n\t}\r\n};\r\n\r\nexport const SudokuOptions = ({\r\n\tsolution,\r\n\tboard,\r\n\tsetBoard,\r\n\tsetSudoku,\r\n}: SudoOptionsProps): JSX.Element => {\r\n\tconst classes = useStyles();\r\n\tconst [candidate, setCandidate] = useState(board);\r\n\tconst [isValidating, setValidating] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\thandleValidateFullBoard(\r\n\t\t\tboard,\r\n\t\t\tcandidate,\r\n\t\t\tsolution,\r\n\t\t\tisValidating,\r\n\t\t\tsetBoard,\r\n\t\t\tsetValidating,\r\n\t\t\tsetCandidate\r\n\t\t);\r\n\t\t// console.log('useEffect for end check !');\r\n\t}, [board]);\r\n\r\n\treturn (\r\n\t\t<section className=\"Options-box-wrapper\">\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tonClick={() => handleNewGame(setSudoku, setCandidate, setValidating)}\r\n\t\t\t\t>\r\n\t\t\t\t\tNew Game\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\thandleValidateSudoku(\r\n\t\t\t\t\t\t\tboard,\r\n\t\t\t\t\t\t\tsolution,\r\n\t\t\t\t\t\t\tcandidate,\r\n\t\t\t\t\t\t\tisValidating,\r\n\t\t\t\t\t\t\tsetBoard,\r\n\t\t\t\t\t\t\tsetCandidate,\r\n\t\t\t\t\t\t\tsetValidating\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t{isValidating ? 'Return' : 'Validate'}\r\n\t\t\t\t</Button>{' '}\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t// size=\"small\"\r\n\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\t() => onFetchBoardClick()\r\n\t\t\t\t\t\t\t//\topen popUp with input field\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t// handleFetchBoard(board, setSudoku, setCandidate, setValidating)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tFetch Board\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default SudokuOptions;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Sudoku.scss';\r\nimport BoxWrapper from './BoxWrapper/BoxWrapper';\r\nimport SudokuRow from './SudokuRow';\r\nimport SudokuOptions from '../SudokuOptions/SudokuOptions';\r\nimport { Board, SudokuType } from './types';\r\nimport { getSudoku } from '../../utils/sudokuFunctions';\r\nimport { uuid } from 'uuidv4';\r\n\r\nexport const Sudoku = (): JSX.Element => {\r\n\tconst sudokuGame = getSudoku();\r\n\tconst [sudoku, setSudoku] = useState<SudokuType>(sudokuGame);\r\n\tconst [board, setBoard] = useState<Board>([...sudoku.board]);\r\n\tconst [solution, setSolution] = useState<Board>(sudoku.solution);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoard([...sudoku.board]);\r\n\t\tsetSolution(sudoku.solution);\r\n\t}, [sudoku]);\r\n\r\n\treturn (\r\n\t\t<div className=\"sudoku-container\">\r\n\t\t\t<BoxWrapper board={board} />\r\n\t\t\t<div className=\"sudoku-board-wrapper\">\r\n\t\t\t\t<div className=\"sudoku-board\">\r\n\t\t\t\t\t{board &&\r\n\t\t\t\t\t\tboard.map((array, row: number) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<SudokuRow\r\n\t\t\t\t\t\t\t\t\tarray={array}\r\n\t\t\t\t\t\t\t\t\trow={row}\r\n\t\t\t\t\t\t\t\t\tboard={board}\r\n\t\t\t\t\t\t\t\t\tsetBoard={setBoard}\r\n\t\t\t\t\t\t\t\t\tkey={uuid()}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<SudokuOptions\r\n\t\t\t\tboard={board}\r\n\t\t\t\tsolution={solution}\r\n\t\t\t\tsetBoard={setBoard}\r\n\t\t\t\tsetSudoku={setSudoku}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Sudoku;\r\n","import React from 'react';\nimport './App.scss';\nimport Sudoku from '../Sudoku/Sudoku';\n\nexport const App = (): JSX.Element => {\n\treturn (\n\t\t<div className=\"App sudoku-wrapper\">\n\t\t\t<Sudoku />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}